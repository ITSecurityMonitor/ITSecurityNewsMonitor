@model ITSecurityNewsMonitor.ViewModels.AdminIndexViewModel

@{
    ViewData["Title"] = "User Management";
}

<div class="site-header">
    <h1>@ViewData["Title"]</h1>
    <a href="@Url.Action("Index", "Admin")">
        <span class="">← Back to Admin Overview</span>
    </a>
</div>


<div class="px-5 md:px-10 py-10">
    <div class="table w-full bg-white">
        <div class="grid grid-cols-4">
            <div class="col-span-2">
                Email
            </div>
            <div>
                Role
            </div>
            <div class="text-right">
                Actions
            </div>
        </div>
        @foreach (var userRole in Model.UserRoles)
        {
            <div id="@userRole.User.Id" class="grid grid-cols-4 text-xs">
                
                <div class="col-span-2">
                    @userRole.User.Email
                </div>
                <div>
                    @(userRole.Roles.FirstOrDefault()?.Name ?? "User")
                    </div>
                <div class="text-right">
                    <div class="btn-group" role="group">
                        <div aria-labelledby="btnGroupDrop1">
                            <button class="button mb-1" href="#" onclick="changeRole('@userRole.User.Id')">@(userRole.Roles.FirstOrDefault() == null ? "Make Admin" : "Remove Admin")</button>
                            <button class="button-danger" href="#" onclick="deleteUser('@userRole.User.Id')">Delete user</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const deleteUser = userId => {
            if (confirm("Do you really wish to delete this user?")) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "@Url.Action("DeleteUser", "Admin")", true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.addEventListener('readystatechange', function () {
                    if (xhr.status != 200) {
                        alert("Error");
                    } else {
                        window.location.reload();
                    }
                });
                xhr.send(JSON.stringify({
                    userId: userId
                }));
            }
        }

        const changeRole = userId => {
            if (confirm("Do you really wish to change the role of this user?")) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "@Url.Action("ChangeRole", "Admin")", true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.addEventListener('readystatechange', function () {
                    if (xhr.status != 200) {
                        alert("Error");
                    } else {
                        window.location.reload();
                    }
                });
                xhr.send(JSON.stringify({
                    userId: userId
                }));
            }
        }
    </script>
}