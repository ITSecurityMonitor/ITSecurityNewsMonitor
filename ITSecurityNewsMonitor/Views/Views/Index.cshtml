@model IEnumerable<ITSecurityNewsMonitor.Models.View>
@{
    ViewData["Title"] = "Views";
}
<div class="site-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="px-5 md:px-10 pb-10 pt-0">

    <div class="text-right mb-2">
        <button class="button" onclick="window.location.href='@Url.Action("Create", "Views")'">
            ＋ New View
        </button>
    </div>

    <div class="table w-full">
        <div class="grid grid-cols-4">
            <span class="col-span-3">Name</span>
            <span class="text-right">Action</span>
        </div>
        @foreach (View view in Model)
        {  
            <div class="grid grid-cols-4">
                <div class="col-span-3">
                    <span class="">@view.Name</span>
                    @* TODO: *@
                    @* Tags go here  *@
                    @* <div>
                        Tag here
                    </div> *@
                </div>
                <div class="text-right">
                    <button class="button" href="@Url.Action("Edit", "Views", new { id = view.ID })">
                        Edit
                    </button>
                    <button class="button-danger" onclick="deleteView(@view.ID)">
                        Delete
                    </button>
                </div>
            </div>
        }
        @if(!Model.Any()) {
            <div class="grid grid-cols-4">
                No views yet! Create one now.
            </div>
        }
    </div>

    @* <div class="mt-4"></div>
    @foreach (View view in Model)
    {

        <div id="@view.ID" class="p-8 border shadow-md rounded bg-white bg-opacity-80 mb-4">
            <!-- Name  -->
            <span class="text-xs text-gray-500">Name</span>
            <br>
            <span class="font-bold">
                @view.Name
            </span>
            <!-- Tags -->
            @if (view.HighLevelTags.Any())
            {
                <br>
                <span class="text-xs text-gray-500">Tags</span>
            }
            <br>
            <div class="mb-1">
                @foreach (HighLevelTag highLevelTag in view.HighLevelTags)
                {
                    <span class="high-level-tag">
                        @highLevelTag.Name
                    </span>
                }

            </div>
            <!-- Actions  -->
            <span class="text-xs text-gray-500">Actions</span>
            <div class="flex">
                <a href="#" onclick="deleteView(@view.ID)" class="text-button mr-2">
                    <svg width="12px" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="trash" class="svg-inline--fa fa-trash fa-w-14" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"></path></svg>
                    <span class="ml-1">Delete</span>
                </a>
                &middot;

                <a href="@Url.Action("Edit", "Views", new { id = view.ID })" class="text-button ml-2">
                    <svg width="13px" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="pen" class="svg-inline--fa fa-pen fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z"></path></svg>
                    <span class="ml-1">Edit</span>
                </a>
            </div>
        </div>
    } *@
</div>

@section Scripts {
    <script>
        const deleteView = viewId => {
            if (confirm("Do you really wish to delete this view?")) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "@Url.Action("Delete", "Views")", true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify({
                    viewId: viewId
                }));

            const elem = document.getElementById(viewId);
            elem.parentNode.removeChild(elem);
            }
    }
    </script>
}