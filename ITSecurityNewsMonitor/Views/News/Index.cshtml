@model ITSecurityNewsMonitor.ViewModels.NewsIndexViewModel
@{
    ViewData["Title"] = "News";
}

<div class="sticky z-20 -top-1 px-5 md_px-10 bg-white pt-4 pb-4" id="view-picker">
    <div class="flex">
        <a class="view-tab @(ViewBag.order.Equals("popular") ? "selected" : "")" href="@Url.Action("Index", "News", new { order = "popular" })">
            <div class="flex">
                <svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="fire-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M323.56 51.2c-20.8 19.3-39.58 39.59-56.22 59.97C240.08 73.62 206.28 35.53 168 0 69.74 91.17 0 209.96 0 281.6 0 408.85 100.29 512 224 512s224-103.15 224-230.4c0-53.27-51.98-163.14-124.44-230.4zM224 464c-97.05 0-176-81.83-176-182.4 0-45.37 44.3-133.21 120.16-214.09 22.34 23.36 42.82 47.72 60.34 71.86l36.62 50.44 39.41-48.29c5.83-7.15 11.85-14.15 18.01-20.97C368.89 177.96 400 250.42 400 281.6 400 382.17 321.05 464 224 464zm89.47-220.84l-51.3 58.52S181.75 198.98 175.69 192C133.27 242.86 112 272.62 112 306.41 112 374.23 163.37 416 226.5 416c25.26 0 48.62-7.87 67.58-21.13 43.08-30.14 53.18-88.58 29.26-134.24-2.95-5.62-6.24-11.48-9.87-17.47z"></path></svg>
                <span class="name">Popular</span>
            </div>
        </a>
        <a class="view-tab @(ViewBag.order.Equals("new") ? "selected" : "")" href="@Url.Action("Index", "News", new { order = "new" })">
            <div class="flex">
                <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="sparkles" class="svg-inline--fa fa-sparkles fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M324.42 103.15L384 128l24.84 59.58a8 8 0 0 0 14.32 0L448 128l59.58-24.85a8 8 0 0 0 0-14.31L448 64 423.16 4.42a8 8 0 0 0-14.32 0L384 64l-59.58 24.84a8 8 0 0 0 0 14.31zm183.16 305.69L448 384l-24.84-59.58a8 8 0 0 0-14.32 0L384 384l-59.58 24.84a8 8 0 0 0 0 14.32L384 448l24.84 59.58a8 8 0 0 0 14.32 0L448 448l59.58-24.84a8 8 0 0 0 0-14.32zM384 255.64a16.06 16.06 0 0 0-8.84-14.33l-112.57-56.39-56.28-112.77c-5.44-10.87-23.19-10.87-28.62 0l-56.28 112.77L8.84 241.31a16 16 0 0 0 0 28.67l112.57 56.39 56.28 112.77a16 16 0 0 0 28.62 0l56.28-112.77L375.16 270a16.07 16.07 0 0 0 8.84-14.36z"></path></svg>
                <span class="name">New</span>
            </div>
        </a>
        <a class="view-tab @(ViewBag.order.Equals("developing") ? "selected" : "")" href="@Url.Action("Index", "News", new { order = "developing" })">
            <div class="flex">
                <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="sparkles" class="svg-inline--fa fa-sparkles fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M324.42 103.15L384 128l24.84 59.58a8 8 0 0 0 14.32 0L448 128l59.58-24.85a8 8 0 0 0 0-14.31L448 64 423.16 4.42a8 8 0 0 0-14.32 0L384 64l-59.58 24.84a8 8 0 0 0 0 14.31zm183.16 305.69L448 384l-24.84-59.58a8 8 0 0 0-14.32 0L384 384l-59.58 24.84a8 8 0 0 0 0 14.32L384 448l24.84 59.58a8 8 0 0 0 14.32 0L448 448l59.58-24.84a8 8 0 0 0 0-14.32zM384 255.64a16.06 16.06 0 0 0-8.84-14.33l-112.57-56.39-56.28-112.77c-5.44-10.87-23.19-10.87-28.62 0l-56.28 112.77L8.84 241.31a16 16 0 0 0 0 28.67l112.57 56.39 56.28 112.77a16 16 0 0 0 28.62 0l56.28-112.77L375.16 270a16.07 16.07 0 0 0 8.84-14.36z"></path></svg>
                <span class="name">Developing</span>
            </div>
        </a>
        <a class="view-tab @(ViewBag.order.Equals("favorite") ? "selected" : "")" href="@Url.Action("Index", "News", new { order = "favorite" })">
            <div class="flex">
                <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="heart" class="svg-inline--fa fa-heart fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"></path></svg>
                <span class="name">Favorites</span>
            </div>
        </a>

        <div class="ml-auto">
            <form method="get" class="ml-auto flex">
                <input type="text" name="search" class="rounded border w-full" value="@(Model.Search == null ? "" : Model.Search)" />
                <input type="submit" value="Search" class="ml-1 button" />
            </form>
        </div>
    </div>
</div>

<div class="px-5 md_px-10 pt-5">
    @foreach (NewsGroup newsGroup in Model.NewsGroups)
    {
        News latestNews = newsGroup.News.OrderBy(n => n.CreatedDate).FirstOrDefault();
        LinkViewed linkViewedLatest = latestNews.LinkViewed.Where(lv => lv.OwnerID.Equals(Model.OwnerId)).FirstOrDefault();

        <!-- News Group -->
        <div class="shadow-md rounded-lg border overflow-hidden bg-white bg-opacity-80 pb-1" id="@latestNews.ID">

            <div class="news-group-content">
                <!-- News -->
                <div class="mb-4">
                    <div class="pt-6 px-8 pb-4 border-b bg-gray-50">
                        <div class="flex flex-col sm_flex-row">
                            @* Headline *@
                            <span>
                                <a class="trackout-link" href="@Url.Action("Trackout", "News", new { newsId = latestNews.ID, link = latestNews.Link })" target=":_blank" onclick="@(linkViewedLatest == null ? "" : "user_followed_link(" + latestNews.ID + ")")">
                                    <span class="font-bold text-2xl">
                                        @latestNews.Headline
                                    </span>
                                </a>
                                <span class="text-xs whitespace-nowrap">
                                    <a href="@latestNews.Source.Homepage" class="link" target=":_blank">
                                        via @latestNews.Source.Name
                                    </a>
                                </span>
                            </span>

                            @{
                                bool favorite = newsGroup.Favorites.Any(f => f.OwnerID.Equals(Model.OwnerId));
                            }

                            @* Tags + Favorite *@
                            <div class="flex md_ml-auto mb-2 md_mb-0 flex-row sm_flex-col">
                                <div class="ml-auto flex order-2 sm_order-1">
                                    <button class="ml-auto" onclick="user_favorited(event, @newsGroup.ID, @(favorite ? "true" : "false"))">
                                        @if (!favorite) {
                                            <svg class="w-5 h-3.5 text-purple-200" aria-hidden="true" stroke="red" focusable="false" data-prefix="fas" data-icon="heart" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                                <path class="stroke-current" fill="transparent" stroke-width="50" d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"></path>
                                            </svg>
                                        } else {
                                            <svg class="w-5 h-3.5 text-purple-500" aria-hidden="true" stroke="red" focusable="false" data-prefix="fas" data-icon="heart" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                                <path class="stroke-current fill-current" stroke-width="50" d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"></path>
                                            </svg>
                                        }
                                    </button>
                                </div>
                                <a href="@Url.Action("Details", "News", new { newsGroupId = newsGroup.ID })" class="sm_order-2 sm_mt-auto mt-2 mb-0.5 self-start text-button w-36 flex sm_ml-auto sm_justify-end text-sm">
                                    @if (newsGroup.News.Count() > 1)
                                    {
                                        <span class="mt-0.5 uppercase font-bold text-xs mr-1 text-left sm_text-right w-40">View as Story →</span>
                                    }
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="flex -mt-3 items-center">
                        @if (newsGroup.News.All(n => n.LinkViewed.Any(lv => lv.OwnerID.Equals(Model.OwnerId))))
                        {
                            <div class="ml-8 h-6 flex items-center text-xs bg-white px-2 rounded-md border text-purple-500">
                                <svg class="mb-0.5 inline-block h-3 mr-1" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="check-square" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"></path></svg>
                                All read
                            </div>
                        }
                        <div class="ml-auto"></div>
                        @{
                            bool recentlyUpdated = newsGroup.UpdatedDate > DateTime.Now.AddDays(-3);
                            bool developingStory = newsGroup.CreatedDate > DateTime.Now.AddDays(-3) && newsGroup.News.Count() >= 2;

                        }
                        @if (recentlyUpdated && developingStory)
                        {
                            <div class="story-tag py-0.5 border group recently-updated">
                                <svg class="h-2.5 w-3" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="sparkles" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M324.42 103.15L384 128l24.84 59.58a8 8 0 0 0 14.32 0L448 128l59.58-24.85a8 8 0 0 0 0-14.31L448 64 423.16 4.42a8 8 0 0 0-14.32 0L384 64l-59.58 24.84a8 8 0 0 0 0 14.31zm183.16 305.69L448 384l-24.84-59.58a8 8 0 0 0-14.32 0L384 384l-59.58 24.84a8 8 0 0 0 0 14.32L384 448l24.84 59.58a8 8 0 0 0 14.32 0L448 448l59.58-24.84a8 8 0 0 0 0-14.32zM384 255.64a16.06 16.06 0 0 0-8.84-14.33l-112.57-56.39-56.28-112.77c-5.44-10.87-23.19-10.87-28.62 0l-56.28 112.77L8.84 241.31a16 16 0 0 0 0 28.67l112.57 56.39 56.28 112.77a16 16 0 0 0 28.62 0l56.28-112.77L375.16 270a16.07 16.07 0 0 0 8.84-14.36z"></path></svg>
                                <span class="icon transition-all max-w-0 group-hover_max-w-7xl whitespace-nowrap">Recently Updated</span>
                            </div>

                            <div class="ml-1 mr-8 story-tag py-0.5 border group long-running">
                                <svg class="h-2.5 w-3" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="newspaper" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z"></path></svg>
                                <span class="icon transition-all max-w-0 group-hover_max-w-7xl whitespace-nowrap">Developing Story</span>
                            </div>
                        }

                        @if (recentlyUpdated && !developingStory)
                        {
                            <div class="ml-1 mr-8 story-tag py-0.5 border group long-running">
                                <svg class="h-2.5 w-3" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="sparkles" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M324.42 103.15L384 128l24.84 59.58a8 8 0 0 0 14.32 0L448 128l59.58-24.85a8 8 0 0 0 0-14.31L448 64 423.16 4.42a8 8 0 0 0-14.32 0L384 64l-59.58 24.84a8 8 0 0 0 0 14.31zm183.16 305.69L448 384l-24.84-59.58a8 8 0 0 0-14.32 0L384 384l-59.58 24.84a8 8 0 0 0 0 14.32L384 448l24.84 59.58a8 8 0 0 0 14.32 0L448 448l59.58-24.84a8 8 0 0 0 0-14.32zM384 255.64a16.06 16.06 0 0 0-8.84-14.33l-112.57-56.39-56.28-112.77c-5.44-10.87-23.19-10.87-28.62 0l-56.28 112.77L8.84 241.31a16 16 0 0 0 0 28.67l112.57 56.39 56.28 112.77a16 16 0 0 0 28.62 0l56.28-112.77L375.16 270a16.07 16.07 0 0 0 8.84-14.36z"></path></svg>
                                <span class="icon transition-all max-w-0 group-hover_max-w-7xl whitespace-nowrap">Recently Updated</span>
                            </div>
                        }

                        @if (!recentlyUpdated && developingStory)
                        {
                            <div class="ml-1 mr-8 story-tag py-0.5 border group long-running">
                                <svg class="h-2.5 w-3" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="newspaper" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z"></path></svg>
                                <span class="icon transition-all max-w-0 group-hover_max-w-7xl whitespace-nowrap">Developing Story</span>
                            </div>
                        }
                    </div>
                    <div class="px-8 pt-4">

                        @latestNews.Summary

                        @if (linkViewedLatest != null)
                        {
                            <span class="text-purple-300 text-xs whitespace-nowrap">
                                <svg class="mb-0.5 inline-block h-3" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="check-square" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"></path></svg>
                                Read on @linkViewedLatest.Date.ToString("dd/MM")
                            </span>
                        }

                        @if (latestNews.Tags.Any())
                        {
                            <span class="text-xs text-gray-500">Tags</span>
                        }
                        <br>
                        @foreach (Tag tag in latestNews.Tags)
                        {
                            <span class="low-level-tag">
                                @tag.Name
                            </span>
                        }
                    </div>
                </div>

                <!-- Related news -->
                @if (newsGroup.News.Count() > 1)
                {
                    <span class=" px-8 text-xs text-gray-500">Related</span>
                }

                @foreach (News news in newsGroup.News.OrderBy(n => n.CreatedDate).Skip(1))
                {
                    LinkViewed linkViewed = news.LinkViewed.Where(lv => lv.OwnerID.Equals(Model.OwnerId)).FirstOrDefault();

                    <div class="px-8 mb-2 flex">

                        <div class="w-4">
                            @if (linkViewed != null) {
                                <svg class="mb-1 inline-block h-3 text-purple-300" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="check-square" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path class="fill-current" d="M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z"></path></svg>
                            } else {
                                <svg class="mb-1 inline-block h-3.5 text-purple-500" aria-hidden="true" focusable="false" data-prefix="fad" data-icon="circle" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">                                    
                                    <path class="fill-current" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 424c-97.06 0-176-79-176-176S158.94 80 256 80s176 79 176 176-78.94 176-176 176z" opacity="0.4"></path>
                                    <path class="fill-current" d="M256 432c-97.06 0-176-79-176-176S158.94 80 256 80s176 79 176 176-78.94 176-176 176z"></path>
                                </svg>
                            }
                        </div>

                        <div class="flex flex-col sm_flex-row">
                            <div class="flex mt-0.5 ml-2 items-top">
                                <div class="mr-1 mt-0.5 text-xs sm_mt-0 sm_text-sm flex sm_w-36 sm_flex-col">
                                    @news.CreatedDate.ToString("dd.MM.yyyy")
                                    <span class="sm_hidden border-r h-3 mt-0.5 ml-1 mr-1"></span>
                                    
                                    @if (linkViewed != null)
                                    {
                                        <span class="text-purple-300 text-xs">
                                            Read on @linkViewed.Date.ToString("dd/MM")
                                        </span>
                                    }
                                </div>
                                <span class="-mt-0.5 mr-2 invisible sm_visible">
                                    →
                                </span>
                            </div>
                            <span class="ml-2 sm_ml-0 sm_mt-0.5 leading-4">
                                <span class="font-bold hover_underline cursor-pointer">
                                    <a class="trackout-link" href="@Url.Action("Trackout", "News", new { newsId = news.ID, link = news.Link })" target=":_blank" onclick="@(linkViewed == null ? "" : "user_followed_link(" + news.ID + ")")">
                                        @news.Headline
                                    </a>
                                </span>
                                <span class="text-xs whitespace-nowrap">
                                    <a href="@news.Source.Homepage" target=":_blank" class="link">
                                        via @news.Source.Name
                                    </a>
                                </span>
                            </span>
                        </div>
                    </div>
                }
            </div>

            <div class="px-8 pb-2 flex flex-col mt-4 mb-1">
                <div class="ml-auto text-xs flex flex-col md_flex-row justify-right text-gray-500">
                    <span>Last updated: @newsGroup.UpdatedDate.ToString("dd.MM.yyyy")</span>
                    @if ((@newsGroup.UpdatedDate - @newsGroup.CreatedDate).TotalSeconds > 10) {
                        <span class="hidden px-1 md_block">&middot;</span>
                        <span>Story started: @newsGroup.CreatedDate.ToString("dd.MM.yyyy")</span>
                    }
                </div>
            </div>
        </div>
        <br>
    }
</div>

<div class="px-10 pt-10 pb-16 flex justify-center">
    <a href="@Url.Action("Index", "News", new { page = Model.Page > 1 ? Model.Page - 1 : 1, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-2 mr-1 flex @(Model.Page > 1 ? "text-gray-400 hover_text-black" : "text-gray-100 pointer-events-none")">
        <div class="ml-1">← Prev</div>
    </a>
    &middot;
    Page @Model.Page of @Model.MaxPage
    &middot;
    <a href="@Url.Action("Index", "News", new { page = Model.Page < Model.MaxPage ? Model.Page + 1 : Model.MaxPage, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-1 flex @(Model.Page < Model.MaxPage ? "text-gray-400 hover_text-black" : "text-gray-100 pointer-events-none")">
        <div class="mr-1">Next →</div>
    </a>
</div>

@section Scripts {
    <script type="text/javascript">

        const is_scrolled_into_view = (el) => {
            let rect = el.getBoundingClientRect();
            let elemTop = rect.top;
            let elemBottom = rect.bottom;

            // Only completely visible elements return true:
            let isVisible = (elemTop >= 0) && (elemBottom <= window.innerHeight);
            // Partially visible elements return true:
            //isVisible = elemTop < window.innerHeight && elemBottom >= 0;
            return isVisible;
        }

        const handle_scroll = () => {
            let is_in_view = is_scrolled_into_view(document.getElementById("view-picker"));

            const view_name_in_navbar = document.getElementById("view-name-in-navbar");
            const sticky_searchbar_and_pages = document.getElementById("sticky-searchbar-and-pages");
            if(!view_name_in_navbar || !sticky_searchbar_and_pages) return

            if(is_in_view) {
                view_name_in_navbar.classList.add("hidden");
                sticky_searchbar_and_pages.classList.remove("bg-white");
            } else  {
                view_name_in_navbar.classList.remove("hidden");
                sticky_searchbar_and_pages.classList.add("bg-white");
            }
        }

        document.onscroll = () => {
            handle_scroll();
        }

        handle_scroll();

        const user_followed_link = (newsGroupId) => {
            const elem = document.getElementById(newsGroupId);

            const links = elem.querySelectorAll(".trackout-link");
            for (const link of links) {
                link.onclick = null;
            }
        }

        const user_favorited = (e, id, set) => {
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "@Url.Action("Favorite", "News")", true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(JSON.stringify({
                id: id
            }));

            const elem = e.currentTarget;

            if (set) {
                elem.innerHTML = `<svg class="w-5 h-3.5 text-purple-200" aria-hidden="true" stroke="red" focusable="false" data-prefix="fas" data-icon="heart" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path class="stroke-current" fill="transparent" stroke-width="50" d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"></path>
                </svg>`;
            } else {
                elem.innerHTML = `<svg class="w-5 h-3.5 text-purple-500" aria-hidden="true" stroke="red" focusable="false" data-prefix="fas" data-icon="heart" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path class="stroke-current fill-current" stroke-width="50" d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"></path>
                </svg>`;
            }

            elem.setAttribute("onClick", `user_favorited(event, ${id}, ${!set})`);
        }

        const toggle_show_all_tabs = () => {
            document.getElementById("tabs-container").classList.toggle("show-all")
            document.getElementById("hide-all-button").classList.toggle("hidden")
        }

        @* function isOverflown(element) {
            return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;
        } *@

    </script>
}
