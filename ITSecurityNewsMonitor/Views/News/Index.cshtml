@model ITSecurityNewsMonitor.ViewModels.NewsIndexViewModel
@{
    ViewData["Title"] = "News";
}

<div class="site-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="px-10 pt-4" id="view-picker">
    <!-- All -->
    <div class="bg-gray-50 rounded p-3">
        <div class="flex -mb-2">
            <div class="uppercase font-bold text-xs text-gray-400 mb-2 mr-2">Views</div>
            @if (Model.SelectedView == null) {
                <button class="ml-auto button uppercase font-bold text-xs mb-2 mr-2 cursor-pointer" disabled>
                    Clear
                </button>
            }
            @if (Model.SelectedView != null) {
                <button onclick='window.location.href = "@Url.Action("Index", "News")"' class="ml-auto button uppercase font-bold text-xs mb-2 mr-2 @(Model.SelectedView == null ? "selected" : "") cursor-pointer">
                    Clear
                </button>
            }
        </div>
        <div class="flex overflow-hidden" id="tabs-container">
            <div class="flex flex-wrap ">

                @* <!-- All tab -->
                <a href="@Url.Action("Index", "News")">
                    <div class="view-tab uppercase @(Model.SelectedView == null ? "selected" : "") cursor-pointer w-16">All</div>
                </a> *@
                
                <!-- Current Tab -->
                @if (@Model.SelectedView != null) {
                    <a href="@Url.Action("Index", "News", new { view = @Model.SelectedView.ID})">
                        <div class="view-tab @(Model.SelectedView != null && Model.SelectedView.ID.Equals(@Model.SelectedView.ID) ? "selected" : "") cursor-pointer">
                            @Model.SelectedView.Name
                        </div>
                    </a>
                }

                <!-- Tabs -->
                @foreach (View view in Model.Views)
                {   
                    @if (@Model.SelectedView == null || view.ID != @Model.SelectedView.ID) {
                        <a href="@Url.Action("Index", "News", new { view = view.ID})">
                            <div class="view-tab  @(Model.SelectedView != null && @Model.SelectedView.ID.Equals(view.ID) ? "selected" : "") cursor-pointer">
                                @view.Name
                            </div>
                        </a>
                    }
                }
                <!-- New -->
                @* <button class="px-2 pt-4 flex items-start justify-center flex-shrink-0 font-bold hover:text-purple-600" onclick="window.location.href='@Url.Action("Create", "Views")'">
                    + New
                </button> *@
            </div>

            @* dont apply text-button here  *@
            <button class="show-all-button ml-auto px-2 pt-3 pb-4 flex items-start justify-center flex-shrink-0 font-bold hover:text-purple-600" onclick="toggle_show_all_tabs()">
                <svg class="pt-1 w-3 mr-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"></path></svg>
                View All
            </button>
        </div>

        <button id="hide-all-button" class="hidden ml-auto px-2 pt-4 pb-2 flex items-start justify-center flex-shrink-0 font-bold hover:text-purple-600" onclick="toggle_show_all_tabs()">
            <svg class="pt-1 w-3 mr-1" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-up" class="svg-inline--fa fa-chevron-up fa-w-14" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"></path></svg>
            Hide All
        </button>
    </div>
</div>

<div class="sticky z-30 top-16 md:top-12 pt-4 px-10 bg-white pb-4 flex flex-col sm:flex-row border-b shadow-2xl" id="sticky-searchbar-and-pages">
     <!-- Search -->
    <div class="">
        <form method="get" class="ml-auto flex">
            <input type="text" name="search" class="rounded border p-1 w-full sm:w-auto" value="@(Model.Search == null ? "" : Model.Search)" />
            <input type="submit" value="Search" class="ml-1 button" />
        </form>
    </div>

    <div class="mt-2 sm:mt-0 ml-auto flex items-center">
        <a href="@Url.Action("Index", "News", new { page = Model.Page > 1 ? Model.Page - 1 : 1, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-2 mr-1 flex @(Model.Page > 1 ? "text-gray-400 hover:text-black" : "text-gray-100 pointer-events-none")">
            <div class="ml-1 self-center ">← Prev</div>
        </a>
        &middot;
        Page @Model.Page of @Model.MaxPage
        &middot;
        <a href="@Url.Action("Index", "News", new { page = Model.Page < Model.MaxPage ? Model.Page + 1 : Model.MaxPage, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-1 flex @(Model.Page < Model.MaxPage ? "text-gray-400 hover:text-black" : "text-gray-100 pointer-events-none")">
            <div class="mr-1">Next →</div>
        </a>
    </div>
</div>

<div class="px-10 pt-10">
    @foreach (NewsGroup newsGroup in Model.NewsGroups)
    {
        <!-- News Group -->
        <div class="shadow-md rounded-lg border overflow-hidden bg-white bg-opacity-80 pb-1 @(newsGroup.VoteRequests.Where(vr => vr.OwnerID.Equals(Model.OwnerId) && !vr.Completed).Any() ? "show-vote-tracker" : "")" id="@newsGroup.ID">

            <!-- Voting  -->
            <div class="p-8 news-group-vote-tracker">
                    <div class="px-8">
                        <h5 class="text-2xl font-bold text-purple-900">
                            Is this group of articles
                            <span class="border-purple-300 border-b-4">relevant</span>
                            for you or others?
                        </h5>
                    </div>
                    <div class="px-8 flex mt-4">
                        <div class="mr-10 text-xl flex items-center cursor-pointer text-purple-400 hover:text-purple-600" onclick="user_voted(@newsGroup.ID, true)">
                            <span class="mr-3 text-3xl">Yes</span>
                            <svg width="2.25em" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="vote-yea" class="svg-inline--fa fa-vote-yea fa-w-20" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                                <path fill="currentColor" d="M608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h576c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32zm-96 64V64.3c0-17.9-14.5-32.3-32.3-32.3H160.4C142.5 32 128 46.5 128 64.3V384h384zM211.2 202l25.5-25.3c4.2-4.2 11-4.2 15.2.1l41.3 41.6 95.2-94.4c4.2-4.2 11-4.2 15.2.1l25.3 25.5c4.2 4.2 4.2 11-.1 15.2L300.5 292c-4.2 4.2-11 4.2-15.2-.1l-74.1-74.7c-4.3-4.2-4.2-11 0-15.2z"></path>
                            </svg>
                        </div>
                        <div class="mr-10 text-xl flex items-center cursor-pointer text-purple-400 hover:text-purple-600" onclick="user_voted(@newsGroup.ID, false)">
                            <span class="mr-3 text-3xl">No</span>
                            <svg width="2.25em" aria-hidden="true" focusable="false" data-prefix="fal" data-icon="vote-nay" class="svg-inline--fa fa-vote-nay fa-w-20" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                                <path fill="currentColor" d="M393.5 153.8l-11.3-11.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3L320 193.4l-50.9-50.9c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l50.9 50.9-50.9 50.9c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l50.9-50.9 50.9 50.9c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l11.3-11.3c3.1-3.1 3.1-8.2 0-11.3l-51-50.9 50.9-50.9c3.2-3.1 3.2-8.2 0-11.3zM608 288h-64V62.5c0-16.8-14.3-30.5-32-30.5H128c-17.7 0-32 13.7-32 30.5V288H32c-17.7 0-32 14.3-32 32v128c0 17.7 14.3 32 32 32h576c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zM128 64h384v304H128V64zm480 384H32V320h64v48H73.6c-5.3 0-9.6 3.6-9.6 8v16c0 4.4 4.3 8 9.6 8h492.8c5.3 0 9.6-3.6 9.6-8v-16c0-4.4-4.3-8-9.6-8H544v-48h64v128z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="px-8 mt-4">
                        <h3 class="font-bold text-base">
                            <a href="@newsGroup.News.First().Link" class="text-gray-500 hover:text-black" target=":_blank">
                                @newsGroup.News.First().Headline
                            </a>
                        </h3>
                        <h3 class="text-base">
                            @foreach (News news in newsGroup.News.Skip(1))
                            {
                                <a href="@news.Link" class="text-gray-500 hover:text-black" target=":_blank">
                                    @news.Headline
                                </a>
                            }
                        </h3>
                </div>
            </div>

            <div class="news-group-content">
                <!-- News -->
                <div class="mb-4">
                    <div class="pt-6 px-8 pb-4 border-b flex flex-col sm:flex-row bg-gray-50">
                        <span>
                            <a class="trackout-link" href="@Url.Action("Trackout", "News", new { newsGroupId = newsGroup.ID, link = newsGroup.News.First().Link })" target=":_blank" onclick="@(newsGroup.VoteRequests.Where(vr => vr.OwnerID.Equals(Model.OwnerId)).Any() ? "" : "user_followed_link(" + newsGroup.ID + ")")">
                                <span class="font-bold text-2xl">
                                    @newsGroup.News.First().Headline
                                </span>
                            </a>
                            <span class="text-xs whitespace-nowrap">
                                <a href="@newsGroup.News.First().Source.Homepage" class="link" target=":_blank">
                                    via @newsGroup.News.First().Source.Name
                                </a>
                            </span>
                        </span>
                        <a href="@Url.Action("Details", "News", new { newsGroupId = newsGroup.ID })" class="mt-2 self-start text-button w-36 flex sm:ml-auto sm:justify-end text-sm">
                            @if (newsGroup.News.Count() > 1)
                            {
                                <span class="uppercase font-bold text-xs mr-1 text-left sm:text-right w-40">View as Story →</span>
                            }
                        </a>
                    </div>
                    <div class="px-8 pt-4">
                        @newsGroup.News.First().Summary
                        @if (newsGroup.News.First().LowLevelTags.Any())
                        {
                            <span class="text-xs text-gray-500">Tags</span>
                        }
                        <br>
                        @foreach (LowLevelTag lowLevelTag in newsGroup.News.First().LowLevelTags)
                        {
                            <span class="low-level-tag">
                                @lowLevelTag.Name
                            </span>
                        }
                    </div>
                </div>

                @if (!newsGroup.VoteRequests.Where(vr => vr.OwnerID.Equals(Model.OwnerId) && !vr.Completed).Any())
                {
                    <!-- Related news -->
                    @if (newsGroup.News.Count() > 1)
                    {
                        <span class=" px-8 text-xs text-gray-500">Related</span>
                    }

                    @foreach (News news in newsGroup.News.OrderByDescending(n => n.CreatedDate).Skip(1))
                    {
                        <div class="px-8 mb-2">
                            <h1 class="flex flex-col sm:flex-row related-left-bar">
                                <div class="flex mt-0.5">
                                    <div class="w-40 w-24 lg:w-40 ml-6 mr-1 mt-0.5 text-xs sm:mt-0 sm:text-base sm:leading-5">
                                        @news.CreatedDate
                                    </div>
                                    <span class="mr-2 invisible sm:visible">
                                        →
                                    </span>
                                </div>
                                <span class="ml-6 sm:ml-1 sm:mt-0.5 leading-5">
                                    <span class="font-bold hover:underline cursor-pointer">
                                        <a class="trackout-link" href="@Url.Action("Trackout", "News", new { newsGroupId = newsGroup.ID, link = news.Link })" target=":_blank" onclick="@(newsGroup.VoteRequests.Where(vr => vr.OwnerID.Equals(Model.OwnerId)).Any() ? "" : "user_followed_link(" + newsGroup.ID + ")")">
                                            @news.Headline
                                        </a>
                                    </span>
                                    <span class="text-xs whitespace-nowrap">
                                        <a href="@news.Source.Homepage" target=":_blank" class="link">
                                            via @news.Source.Name
                                        </a>
                                    </span>
                                </span>
                            </h1>
                        </div>
                    }
                }
            </div>

            <div class="px-8 pb-2 flex flex-col mt-4 mb-1">
                <div class="ml-auto text-xs text-right text-gray-500">
                    Last updated: @newsGroup.UpdatedDate
                    &middot;
                    Story started: @newsGroup.CreatedDate
                </div>
            </div>
        </div>
        <br>
    }
</div>

<div class="px-10 pt-10 pb-16 flex">
    <a href="@Url.Action("Index", "News", new { page = Model.Page > 1 ? Model.Page - 1 : 1, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-2 mr-1 flex @(Model.Page > 1 ? "text-gray-400 hover:text-black" : "text-gray-100 pointer-events-none")">
        <div class="ml-1">← Prev</div>
    </a>
    &middot;
    Page @Model.Page of @Model.MaxPage
    &middot;
    <a href="@Url.Action("Index", "News", new { page = Model.Page < Model.MaxPage ? Model.Page + 1 : Model.MaxPage, search = Model.Search, view = Model.SelectedView?.ID })" class="ml-1 flex @(Model.Page < Model.MaxPage ? "text-gray-400 hover:text-black" : "text-gray-100 pointer-events-none")">
        <div class="mr-1">Next →</div>
    </a>
</div>

@section Scripts {
    <script type="text/javascript">
        
        const is_scrolled_into_view = (el) => {
            let rect = el.getBoundingClientRect();
            let elemTop = rect.top;
            let elemBottom = rect.bottom;

            // Only completely visible elements return true:
            let isVisible = (elemTop >= 0) && (elemBottom <= window.innerHeight);
            // Partially visible elements return true:
            //isVisible = elemTop < window.innerHeight && elemBottom >= 0;
            return isVisible;
        }
        
        const handle_scroll = () => {
            let is_in_view = is_scrolled_into_view(document.getElementById("view-picker"));
            if(is_in_view) {
                document.getElementById("view-name-in-navbar").classList.add("hidden"); 
                document.getElementById("sticky-searchbar-and-pages").classList.remove("bg-white");
            } else  {
                document.getElementById("view-name-in-navbar").classList.remove("hidden"); 
                document.getElementById("sticky-searchbar-and-pages").classList.add("bg-white");
            }
        }

        document.onscroll = () => {
            handle_scroll();
        }

        handle_scroll();


        const user_voted = (newsGroupId, vote) => {
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "@Url.Action("UserVote", "News")", true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(JSON.stringify({
                newsGroupId: newsGroupId,
                vote: vote
            }));

            const elem = document.getElementById(newsGroupId);

            elem.classList.remove("show-vote-tracker");
        }

        const user_followed_link = (newsGroupId) => {
            const elem = document.getElementById(newsGroupId);

            const links = elem.querySelectorAll(".trackout-link");
            for (const link of links) {
                link.onclick = null;
            }
            
            elem.classList.add("show-vote-tracker");
        }

        const toggle_show_all_tabs = () => {
            document.getElementById("tabs-container").classList.toggle("show-all")
            document.getElementById("hide-all-button").classList.toggle("hidden")
        }

        @* function isOverflown(element) {
            return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;
        } *@

    </script>
}
