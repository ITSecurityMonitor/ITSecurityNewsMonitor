@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var hasMFA = (await SignInManager.GetTwoFactorAuthenticationUserAsync()) != null;
}
<ul class="nav nav-pills flex">

    <div class="link mr-3">
        → <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a>
    </div>
    <div class="link mr-3">
        → <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a>
    </div>

    <div class="link mr-3">
        → <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password"
            asp-page="./ChangePassword">Change Password</a>
    </div>
    @if (hasExternalLogins)
    {
        <div id="external-logins" class="link mr-3">
            → <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
                asp-page="./ExternalLogins">External logins</a>
        </div>
    }
    @if (hasMFA)
    {
        <div class="link mr-3">
            →<a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor"
                asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
        </div>
    }
    <div class="link mr-3">
        → <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data"
            asp-page="./PersonalData">Export Personal data</a>
    </div>
</ul>
