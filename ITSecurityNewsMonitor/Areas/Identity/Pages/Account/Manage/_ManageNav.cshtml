@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var hasMFA = (await SignInManager.GetTwoFactorAuthenticationUserAsync()) != null;
}
<ul class="nav nav-pills flex flex-wrap">

    <div class="nav-group mr-2">
        <button class="nav-item">
            → <a class="@ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Edit Profile</a>
        </button>
        <button class="nav-item">
            → <a class="@ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Edit Email</a>
        </button>
    </div>
    <div class="nav-group">
        <button class="nav-item">
            → <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data"
                asp-page="./PersonalData">Personal data</a>
        </button>
    </div>
    <div class="nav-group mr-2">
        <button class="nav-item ">
            → <a class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password"
                asp-page="./ChangePassword">Change Password</a>
        </button>
         <button id="external-logins" class="nav-item" disabled="@(!hasExternalLogins)">
            → <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
                asp-page="./ExternalLogins">External logins</a>
        </button>

        <button class="nav-item" disabled="@(!hasMFA)">
            →<a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor"
                asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
        </button>
    </div>

</ul>
